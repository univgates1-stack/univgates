import { createClient } from "https://esm.sh/@supabase/supabase-js@2";
import { PDFDocument } from "https://esm.sh/pdf-lib@1.17.1";
import { Image } from "https://deno.land/x/imagescript@1.2.15/mod.ts";
import { corsHeaders } from "../_shared/cors.ts";

class UnsupportedImageError extends Error {
  constructor(message: string) {
    super(message);
    this.name = "UnsupportedImageError";
  }
}

const WATERMARK_BASE64 =
  "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";

const watermarkBytes = Uint8Array.from(atob(WATERMARK_BASE64), (c) =>
  c.charCodeAt(0)
);

const WATERMARK_SCALE = 0.75;

let cachedWatermarkImage: Image | null = null;
let cachedWatermarkPromise: Promise<Image> | null = null;

async function getWatermarkImage(): Promise<Image> {
  if (cachedWatermarkImage) return cachedWatermarkImage;
  if (!cachedWatermarkPromise) {
    cachedWatermarkPromise = Image.decode(watermarkBytes)
      .then((image) => {
        cachedWatermarkImage = image;
        return image;
      })
      .catch((error) => {
        cachedWatermarkPromise = null;
        throw error;
      });
  }
  return cachedWatermarkPromise;
}

const SUPABASE_URL =
  Deno.env.get("SUPABASE_URL") ??
  Deno.env.get("PROJECT_URL");
const SUPABASE_SERVICE_ROLE_KEY =
  Deno.env.get("SUPABASE_SERVICE_ROLE_KEY") ??
  Deno.env.get("SERVICE_ROLE_KEY");

if (!SUPABASE_URL || !SUPABASE_SERVICE_ROLE_KEY) {
  throw new Error("Missing SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY environment variables");
}

const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY, {
  auth: { persistSession: false },
});

type WatermarkRequest = {
  bucket: string;
  path: string;
};

const resolveTarget = (payload: any): { bucket: string; path: string } | null => {
  if (!payload) return null;

  if (payload.bucket && payload.path) {
    return { bucket: payload.bucket, path: payload.path };
  }

  const record = payload.record ?? (Array.isArray(payload.records) ? payload.records[0] : null);
  if (record?.bucket_id && record?.name) {
    return { bucket: record.bucket_id, path: record.name }; 
  }

  return null;
};

const buildPublicUrl = (bucket: string, path: string) =>
  `${SUPABASE_URL}/storage/v1/object/public/${bucket}/${path}`;

function jsonResponse(body: unknown, status = 200) {
  return new Response(JSON.stringify(body), {
    status,
    headers: { ...corsHeaders, "Content-Type": "application/json" },
  });
}

async function applyPdfWatermark(fileBytes: Uint8Array): Promise<Uint8Array> {
  const pdfDoc = await PDFDocument.load(fileBytes);
  const png = await pdfDoc.embedPng(watermarkBytes);

  const pages = pdfDoc.getPages();
  for (const page of pages) {
    const { width, height } = page.getSize();
    const scale = Math.min(width / png.width, height / png.height) * WATERMARK_SCALE;
    const scaled = png.scale(scale);
    const x = (width - scaled.width) / 2;
    const y = (height - scaled.height) / 2;

    page.drawImage(png, {
      x,
      y,
      width: scaled.width,
      height: scaled.height,
      opacity: 0.35,
    });
  }

  const watermarked = await pdfDoc.save();
  return watermarked;
}

async function applyImageWatermark(fileBytes: Uint8Array, extension: string): Promise<{ bytes: Uint8Array; contentType: string }> {
  let baseImage: Image;
  try {
    baseImage = await Image.decode(fileBytes);
  } catch (_error) {
    throw new UnsupportedImageError("Unsupported image format; only PNG and JPEG images can be watermarked.");
  }

  let watermarkBase: Image;
  try {
    watermarkBase = await getWatermarkImage();
  } catch (decodeError) {
    console.error("Failed to decode embedded watermark image", decodeError);
    throw new Error("Unable to decode watermark image");
  }
  const watermark = watermarkBase;

  const targetWidth = Math.floor(baseImage.width * WATERMARK_SCALE);
  const ratio = watermark.width === 0 ? 1 : targetWidth / watermark.width;
  const targetHeight = Math.floor(watermark.height * ratio);
  const resizedWatermark = watermark.resize(targetWidth, targetHeight);

  const x = Math.floor((baseImage.width - resizedWatermark.width) / 2);
  const y = Math.floor((baseImage.height - resizedWatermark.height) / 2);

  baseImage.composite(resizedWatermark, x, y);

  let bytes: Uint8Array;
  let contentType: string;
  switch (extension) {
    case "jpg":
    case "jpeg":
      bytes = await baseImage.encodeJPEG(90);
      contentType = "image/jpeg";
      break;
    case "png":
    default:
      bytes = await baseImage.encode();
      contentType = "image/png";
      break;
  }
  return { bytes, contentType };
}

Deno.serve(async (req) => {
  if (req.method === "OPTIONS") {
    return new Response("ok", { headers: corsHeaders });
  }

  if (req.method !== "POST") {
    return jsonResponse({ error: "Method not allowed" }, 405);
  }

  let body: any;
  try {
    body = await req.json();
  } catch (_error) {
    return jsonResponse({ error: "Invalid JSON body" }, 400);
  }

  const eventType = body?.type ?? null;
  if (eventType && eventType !== "INSERT") {
    return jsonResponse({ skipped: true, reason: `ignored event type ${eventType}` }, 200);
  }

  const target = resolveTarget(body);
  if (!target) {
    return jsonResponse({ error: "Missing bucket or path" }, 400);
  }

  const { bucket, path } = target;

  if (bucket !== "documents") {
    return jsonResponse({ error: "Unsupported bucket" }, 400);
  }

  const { data, error } = await supabase.storage.from(bucket).download(path);
  if (error || !data) {
    return jsonResponse({ error: `Unable to download file: ${error?.message ?? "unknown error"}` }, 400);
  }

  const arrayBuffer = await data.arrayBuffer();
  console.log('Watermark processing start', { bucket, path, size: data.size ?? undefined });
  const fileBytes = new Uint8Array(arrayBuffer);
  const lowerPath = path.toLowerCase();

  try {
    if (lowerPath.endsWith(".pdf")) {
      const watermarkedBytes = await applyPdfWatermark(fileBytes);
      console.log('PDF watermark applied', { path, originalSize: fileBytes.length, resultSize: watermarkedBytes.length });
      const blob = new Blob([watermarkedBytes], { type: "application/pdf" });
      const uploadResp = await supabase.storage
        .from(bucket)
        .upload(path, blob, {
          upsert: true,
          contentType: "application/pdf",
        });

      if (uploadResp.error) throw uploadResp.error;
      console.log('Watermarked PDF uploaded', { path });
      const publicUrl = buildPublicUrl(bucket, path);
      const cacheBustedUrl = `${publicUrl}?v=${Date.now()}`;
      const { error: dbError } = await supabase
        .from('documents')
        .update({ file_url: cacheBustedUrl })
        .eq('file_url', publicUrl);
      if (dbError) {
        console.warn('Failed to update documents table', dbError.message ?? dbError);
      } else {
        console.log('Documents table updated', { path });
      }
      return jsonResponse({ success: true });
    }

    if (lowerPath.endsWith(".png") || lowerPath.endsWith(".jpg") || lowerPath.endsWith(".jpeg")) {
      const ext = lowerPath.split(".").pop() ?? "png";
      const { bytes, contentType } = await applyImageWatermark(fileBytes, ext);
      console.log('Image watermark applied', { path, originalSize: fileBytes.length, resultSize: bytes.length });
      const blob = new Blob([bytes], { type: contentType });
      const uploadResp = await supabase.storage
        .from(bucket)
        .upload(path, blob, {
          upsert: true,
          contentType,
        });

      if (uploadResp.error) throw uploadResp.error;
      console.log('Watermarked image uploaded', { path });
      const publicUrl = buildPublicUrl(bucket, path);
      const cacheBustedUrl = `${publicUrl}?v=${Date.now()}`;
      const { error: dbError } = await supabase
        .from('documents')
        .update({ file_url: cacheBustedUrl })
        .eq('file_url', publicUrl);
      if (dbError) {
        console.warn('Failed to update documents table', dbError.message ?? dbError);
      } else {
        console.log('Documents table updated', { path });
      }
      return jsonResponse({ success: true });
    }

    return jsonResponse({ error: "Unsupported file type" }, 415);
  } catch (err) {
    console.error("Watermark error", err);
    if (err instanceof UnsupportedImageError) {
      return jsonResponse({ error: err.message }, 415);
    }
    return jsonResponse({ error: err instanceof Error ? err.message : String(err) }, 500);
  }
});
